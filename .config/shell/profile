#!/bin/sh

#------------------------------#
# XDG SPECS AND ~ ORGANIZATION #
#------------------------------#
[ -d "$HOME/.config" ]                && mkdir -p "$HOME/.config"
! [ -d "$HOME/.local/bin" ]           && mkdir -p "$HOME/.local/bin"
! [ -d "$HOME/.local/share" ]         && mkdir -p "$HOME/.local/share"
! [ -d "$HOME/.cache" ]               && mkdir -p "$HOME/.cache"
! [ -d "$HOME/.cache/tixati" ]        && mkdir -p "$HOME/.cache/tixati"
! [ -d "$HOME/GitHub" ]               && mkdir -p "$HOME/GitHub"
! [ -d "$HOME/Pictures" ]             && mkdir -p "$HOME/Pictures"
! [ -d "$HOME/Videos" ]               && mkdir -p "$HOME/Videos"
! [ -d "$HOME/Documents" ]            && mkdir -p "$HOME/Documents"
! [ -d "$HOME/Downloads" ]            && mkdir -p "$HOME/Downloads"
! [ -d "$HOME/Desktop" ]              && mkdir -p "$HOME/Desktop"
! [ -d "$HOME/Packages" ]             && mkdir -p "$HOME/Packages"
! [ -d "$HOME/Music" ]                && mkdir -p "$HOME/Music"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

export XDG_DESKTOP_DIR="$HOME/Desktop"
export XDG_DOCUMENTS_DIR="$HOME/Documents"
export XDG_DOWNLOAD_DIR="$HOME/Downloads"
export XDG_MUSIC_DIR="$HOME/Music"
export XDG_PICTURES_DIR="$HOME/Pictures"
export XDG_VIDEOS_DIR="$HOME/Videos"

#--------------------#
# PREFERRED PROGRAMS #
#--------------------#
export BROWSER="/usr/bin/firefox"
export DOCUMENT_VIEWER="/usr/bin/zathura"
export EDITOR="/usr/bin/nvim"
export FILE_MANAGER="/usr/bin/nnn"
export IMAGE_EDITOR="/usr/bin/gimp"
export IMAGE_VIEWER="/usr/bin/imv"
export MAIL="/usr/bin/mutt"
export PLAYER="/usr/bin/mpv"
export TERMINAL="/usr/bin/alacritty"

#--------#
# LOCALE #
#--------#
LANG=en_US.UTF-8
LC_CTYPE=UTF-8
LANG=C
LANG=en_US.UTF-8
LC_ALL=C
LC_CTYPE=ALL
export LANG LANGUAGE LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY \
       LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT \
       LC_IDENTIFICATION LC_ALL


#--------------#
# SCRIPTS PATH #
#--------------#
export PATH=$PATH:$HOME/.local/bin

#--------------#
# GOLANG PATHS #
#--------------#
export GOPATH="${HOME}/.local/share/go"
export GOBIN="${HOME}/.local/share/go/bin"
export PATH=$PATH:$GOBIN

#----------#
# HUBSTAFF #
#----------#
export HUBSTAFF_PATH="${XDG_DATA_HOME:-$HOME/.local/share}/Hubstaff"
export PATH="$PATH:$HUBSTAFF_PATH"

#---------#
# ANDROID #
#---------#
mkdir -p ${XDG_DATA_HOME:-$HOME/.local/share}/android
export ANDROID_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/android"
export ANDROID_SDK_ROOT="${XDG_DATA_HOME:-$HOME/.local/share}/android"
export PATH=$PATH:${ANDROID_SDK_ROOT}/tools
export PATH=$PATH:${ANDROID_SDK_ROOT}/platform-tools

#------#
# RUST #
#------#
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export PATH="$PATH:${XDG_DATA_HOME:-$HOME/.local/share}/cargo/bin"

#-----#
# ZSH #
#-----#
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/history"

#----------#
# STARDICT #
#----------#
STARDICT_DATA_DIR=$XDG_DATA_HOME

#-------------#
# FZF OPTIONS #
#-------------#
export FZF_DEFAULT_OPTS="--layout=reverse --height 60%"

#--------#
# FFMPEG #
#--------#
export FFMPEG_DATADIR="${XDG_CONFIG_HOME:-$HOME/.config}/ffmpeg"

#------#
# GRIM #
#------#
GRIM_DEFAULT_DIR="${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots"
mkdir -p "$GRIM_DEFAULT_DIR"

#---------#
# NODE.JS #
#---------#
export NODE_REPL_HISTORY="$HOME/.cache/node_repl_history"
export NPM_CONFIG_USERCONFIG="$HOME/.config/npm/npmrc"

#-----#
# NVM #
#-----#
export NVM_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/nvm"

#-------#
# REDIS #
#-------#
export REDISCLI_HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/redis/rediscli_history"
export REDISCLI_RCFILE="${XDG_CONFIG_HOME:-$HOME/.config}/redis/redisclirc"

#-----#
# GTK #
#-----#
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc-2.0"
export GTK_THEME=Materia-dark-compact

#-----#
# NNN #
#-----#
export NNN_FIFO="/tmp/nnn.fifo"
export NNN_PLUG="a:autojump;c:chksum;d:dragndrop;f:fzcd;F:fzopen;q:fixname;g:gitroot;G:getplugs;I:imgur;i:imgview;m:mimelist;M:mtpmount;n:nuke;N:nmount;o:organize;O:oldbigfile;P:preview-tab;p:preview-tui;r:rename;R:rsync;s:suedit;t:togglex;u:unmounttree;x:x2sel;X:xdgdefault;"
export NNN_USE_EDITOR=1
export NNN_TRASH=1
BLK="04" CHR="04" DIR="04" EXE="00" REG="00" HARDLINK="00" SYMLINK="06" MISSING="00" ORPHAN="01" FIFO="0F" SOCK="0F" OTHER="02"
export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$OTHER"
export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"

#------------#
# QT OPTIONS #
#------------#
# Uniform theme for QT and GTK
#export QT_QPA_PLATFORMTHEME=gtk2
export QT_QPA_PLATFORMTHEME=wayland-egl
export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
export QT_AUTO_SCREEN_SCALE_FACTOR=0
# Will become obsoloete in the future
# export QT_QPA_PLATFORM="wayland"
# Enabling this makes the widgets bigger on certain monitors
# export QT_WAYLAND_FORCE_DPI=physical

#--------#
# BEMENU #
#--------#
export BEMENU_BACKEND="wayland"
export BEMENU_OPTS="-ic -l 7 -p '  ' -P '' -H 1 -M 240 -W 0.5 -B 2 --ch 15 --cw 5 --fn 'monospace 12' --tb '#1d2021' --tf '#98971A' --ff '#fabd2f' --fb '#1d2021' --nb '#1d2021' --nf '#A89984' --hb '#282828' --hf '#fe8019' --ab '#1d2021' --af '#A89984' --bdr '#FBF1c7'"                         

#-----------------#
# FIREFOX OPTIONS #
#-----------------#
# Enable Wayland for Mozilla Firefox
export MOZ_ENABLE_WAYLAND=1

#------#
# JAVA #
#------#
# Wayland fixes for Java Programs
export _JAVA_AWT_WM_NONREPARENTING=1
export _JAVA_OPTIONS='-Dsun.java2d.opengl=true'
export _JAVA_OPTIONS="${_JAVA_OPTIONS} -Djava.util.prefs.userRoot=${XDG_CONFIG_HOME:-$HOME/.config}/java"
export JDK_JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel"
mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/java"


#------#
# RUBY #
#------#

export GEM_HOME=$HOME/.local/share/gem/ruby
export PATH="$PATH:$GEM_HOME/3.0.0/bin"


#------#
# WGET #
#------#
export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wget/wgetrc"
[ $(grep -c "hsts-file" "$WGETRC") -gt 0 ] || echo "hsts-file = ${XDG_CACHE_HOME:-$HOME/.cache}/wget-hsts" >> "$WGETRC"

#------------#
# MISC PATHS #
#------------#
export LESSHISTFILE="-"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/password-store"
#export GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"

#--------#
# TIXATI #
#--------#
export TIXATI_USER_DATA_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/tixati"
export TIXATI_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/tixati"

#--------------------#
# VISUAL STUDIO CODE #
#--------------------#
export VSCODE_PORTABLE="${XDG_DATA_HOME}/vscode"

#------#
# PASS #
#------#

export PASS_STORE_DIR=$HOME/.local/share/password-store/

#------#
# WINE #
#------#
export WINEPREFIX="${XDG_DATA_HOME}/wine"
export FREETYPE_PROPERTIES="truetype:interpreter-version=35"

#------------#
# POSTGRESQL #
#------------#
# export PGDATA="$HOME/.config/pgcli/config"
  

#---------------#
# GNOME KEYRING #
#---------------#
if test -n "$DESKTOP_SESSION"; then
  export GNOME_KEYRING_CONTROL GNOME_KEYRING_PID
  export SSH_AUTH_SOCK
fi

#---------#
# WAYLAND #
#---------#
export XDG_SESSION_TYPE="wayland"
#export DISPLAY="wayland-0"
export GDK_BACKEND=wayland
#export GDK_BACKEND=x11
if test -z "${XDG_RUNTIME_DIR}"; then
  export XDG_RUNTIME_DIR=/tmp/${UID}-runtime-dir
if ! test -d "${XDG_RUNTIME_DIR}"; then
  mkdir -p "${XDG_RUNTIME_DIR}"
  chmod 0700 "${XDG_RUNTIME_DIR}"
  fi
fi

# Enable when the error "unable to create backend" occurs.
#if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
#  exec sway
#fi

export WLR_DRM_NO_MODIFIERS=1
export XDG_CURRENT_DESKTOP=sway

# Enable these services for screensharing
systemctl --user enable pipewire.socket 
systemctl --user enable pipewire-media-session

# Fire up Sway!
dbus-run-session sway
